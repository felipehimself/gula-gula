import { useRouter } from 'next/router';
import { useState } from 'react';
import Button from '../../components/Button/Button';
import globalStyles from './../../styles/Global.module.css';
import styles from './../../styles/Login.module.css';
import Head from 'next/head';
import Link from 'next/link';
import Topbar from '../../components/Topbar/Topbar';
import ErrorMessage from '../../components/ErrorMessage/ErrorMessage';
import { ThreeDots } from 'react-loading-icons';

import { useForm } from 'react-hook-form';
import { yupResolver } from '@hookform/resolvers/yup';
import { loginValidation } from '../../lib/yup';
import axios, { AxiosResponse } from 'axios';

import { Login as LoginType } from '../../ts/types/types';

const Login = () => {
  const { register, handleSubmit, formState: { errors }, clearErrors } = useForm<LoginType>({
    resolver: yupResolver(loginValidation),
  });

  const [isError, setIsError] = useState({ message: '', show: false });
  const [isLoading, setIsLoading] = useState(false);
  
  const router = useRouter();

  const onSubmit = async (data: LoginType) => {
    setIsLoading(true);
    setIsError({ message: '', show: false });
    clearErrors();
    
    try {
      setIsLoading(true);
      await axios.post<AxiosResponse>('/api/auth/login', data);
      router.reload();
    } catch (error: any) {
      setIsError({ message: error.response.data.message, show: true });
      setIsLoading(false);
    }
  };

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Topbar title='Login' />
      <div className={globalStyles.formContainer}>
        <ErrorMessage show={isError.show} message={isError.message} />
        <form onSubmit={handleSubmit(onSubmit)}>
          <fieldset disabled={isLoading} className={globalStyles.fieldSet}>
            <div className={globalStyles.formControl}>
              <label className={globalStyles.label} htmlFor='email'>
                E-mail
              </label>
              <input
                className={`${globalStyles.input} ${
                  errors.email ? globalStyles.inputError : undefined
                } `}
                type='text'
                id='email'
                {...register('email')}
                aria-label="Seu email"
              />
              <small>{errors.email?.message}</small>
            </div>
            <div className={globalStyles.formControl}>
              <label className={globalStyles.label} htmlFor='password'>
                Senha
              </label>
              <input
                className={`${globalStyles.input} ${
                  errors.email ? globalStyles.inputError : undefined
                } `}
                type='password'
                id='password'
                {...register('password')}
                aria-label="Sua senha"

              />
              <small>{errors.password?.message}</small>
            </div>
            <Button type='submit' aria-label="Entrar na conta">
              {isLoading ? <ThreeDots height={9} /> : 'Login'}
            </Button>
          </fieldset>
        </form>
        <h2 className={`${globalStyles.center} ${styles.createAccount}`}>
          <Link href='/auth/signup'>Criar uma conta</Link>
        </h2>
      </div>
    </>
  );
};
export default Login;
